/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* basic css reset */
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%; /* 1 rem = 10 px */
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 1.7;
    color: #777;
    padding: 3rem;
    
    box-sizing: border-box;
}

.header {
    height: 95vh; /* set header height to 95% of viewport height */
    background-image: linear-gradient(
        to right bottom, 
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 133, 0.8)), 
    url(../img/hero.jpg);
    background-size: cover;
    background-position: top; /* saves top of image and crops bottom */
    position: relative;

    /* clip-path uses %'s, pixels, etc */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* top left, top right, bottom right, bottom left */
}

.header__logo-box {
    position: absolute;
    /* top, left, bottom, and right reference start from parent element with position: relative */
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    /* 50% of width of parent element */
    top: 40%;
    left: 50%;
    /* 50% are not in relation of parent element, but of element it's applying to */
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* determines if back part of element when transformed is visible or not */
    backface-visibility: hidden; /* used to stop shake in animation */
    margin-bottom: 6rem;
}

/* display: block occupy entire width they have available. Also create line breaks after and before them */
.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /*
    animation-delay: 3s;
    animation-iteration-count: 3;
    */
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;
}

/* for browser performance, usually only want to animate opacity and transform property */
@keyframes moveInLeft {
    0% {
        opacity: 0; /* hide element */
        transform: translateX(-10rem); 
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0; /* hide element */
        transform: translateX(10rem); 
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0; /* hide element */
        transform: translateY(3rem); 
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* pseudoclass for anchor */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block; /* use if want to give padding width or height to elements */
    border-radius: 10rem;
    transition: all, 0.2s; /* transition has to be on parent element */
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); /* x y blur colour */
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, 0.2); /* x y blur colour */
}

.btn--white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
}

.btn--white::after {
    background-color: white;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards; /* Apply keyframe properties before animation starts */
}